version: 2
jobs:
  build:
    docker: 
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  unit_test:
    docker: 
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Unit Test
          command: npm run unit-tests
  api_test:
    docker: 
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Unit Test
          command: npm run api-tests
  lint:
    docker: 
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Static Code Analyser
          command: npm run lint
  build_docker:
     docker: 
      - image: circleci/node:10
     steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and Push Docker
          command: |
            export SPROVA_SERVER_V=`node -e "console.log(require('./package.json').version)"`
            echo Building Sprova Server version $SPROVA_SERVER_V
            docker build -t mjeshtri/sprova-server:$SPROVA_SERVER_V .
            echo $DOCKER_PWD | docker login -u mjeshtri --password-stdin
            docker push mjeshtri/sprova-server:$SPROVA_SERVER_V

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - api_test:
          requires:
            - build
      - lint:
          requires:
            - build
      - build_docker:
          requires:
            - unit_test
            - api_test
            - lint